[package]
name = "sc-service"
version = "0.8.0"
authors = ["Parity Technologies <admin@parity.io>"]
edition = "2018"
license = "GPL-3.0-or-later WITH Classpath-exception-2.0"
homepage = "https://substrate.dev"
repository = "https://github.com/paritytech/substrate/"
description = "Substrate service. Starts a thread that spins up the network, client, and extrinsic pool. Manages communication between them."
readme = "README.md"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[features]
default = ["db"]
# The RocksDB feature activates the RocksDB database backend. If it is not activated, and you pass
# a path to a database, an error will be produced at runtime.
db = ["sc-client-db/with-kvdb-rocksdb", "sc-client-db/with-parity-db"]
wasmtime = [
	"sc-executor/wasmtime",
]
# exposes the client type
test-helpers = []

[dependencies]
derive_more = "0.99.2"
futures01 = { package = "futures", version = "0.1.29" }
futures = { version = "0.3.4", features = ["compat"] }
jsonrpc-pubsub = "15.0"
jsonrpc-core = "15.0"
rand = "0.7.3"
parking_lot = "0.10.0"
lazy_static = "1.4.0"
log = "0.4.8"
slog = { version = "2.5.2", features = ["nested-values"] }
futures-timer = "3.0.1"
wasm-timer = "0.2"
exit-future = "0.2.0"
pin-project = "0.4.8"
hash-db = "0.15.2"
serde = "1.0.101"
serde_json = "1.0.41"
sc-keystore = "2.0.0"
sp-io = "2.0.0"
sp-runtime = "2.0.0"
sp-trie = "2.0.0"
sp-externalities = "0.8.0"
sp-utils = "2.0.0"
sp-version = "2.0.0"
sp-blockchain = "2.0.0"
sp-core = "2.0.0"
sp-session = "2.0.0"
sp-state-machine = "0.8.0"
sp-application-crypto = "2.0.0"
sp-consensus = "0.8.0"
sp-inherents = "2.0.0"
sc-network = "0.8.0"
sc-chain-spec = "2.0.0"
sc-light = "2.0.0"
sc-client-api = "2.0.0"
sp-api = "2.0.0"
sc-client-db = { version = "0.8.0", default-features = false }
codec = { package = "parity-scale-codec", version = "1.3.4" }
sc-executor = "0.8.0"
sc-transaction-pool = { path='../transaction-pool', version = "2.0.0"}
sp-transaction-pool = "2.0.0"
sc-rpc-server = "2.0.0"
sc-rpc = "2.0.0"
sc-block-builder = { version = "0.8.0", path = "../block-builder" }
sp-block-builder = "2.0.0"
sc-informant = "0.8.0"
sc-telemetry = "2.0.0"
sc-offchain = "2.0.0"
prometheus-endpoint = { package = "substrate-prometheus-endpoint", version = "0.8.0"}
sc-tracing = "2.0.0"
sp-tracing = "2.0.0"
tracing = "0.1.19"
parity-util-mem = { version = "0.7.0", default-features = false, features = ["primitive-types"] }

[target.'cfg(not(target_os = "unknown"))'.dependencies]
tempfile = "3.1.0"
directories = "2.0.2"

[dev-dependencies]
#substrate-test-runtime-client = { version = "2.0.0", path = "../../test-utils/runtime/client" }
sp-consensus-babe = "0.8.0"
grandpa = { version = "0.8.0", package = "sc-finality-grandpa" }
grandpa-primitives = { version = "2.0.0", package = "sp-finality-grandpa" }
tokio = { version = "0.2", default-features = false }
async-std = { version = "1.6", default-features = false }
