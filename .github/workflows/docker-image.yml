name: Docker Image CI
# available flags: 
## skip-e2e-tests: skip running e2e tests
## skip-build : run the test with latest version.
## skip-publish: skip publish 

on: 
  pull_request:
    branches:
      - develop
  push:
    branches: [ develop ]

  workflow_dispatch:
    # For manually trigger


jobs:

  rustfmt-check:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build Docker Image
        uses: docker/build-push-action@v2
        with:
          file: "devops/dockerfiles/node-and-runtime/Dockerfile"
          load: true
          tags: mangatasolutions/mangata-node-fmt-check:${{ github.sha }}
          target: env_builder
      -
        name: Check formatting
        run: |
          docker run --entrypoint /root/.cargo/bin/cargo mangatasolutions/mangata-node-fmt-check:${{ github.sha }} fmt -- --check

  clippy:
    name: Clippy check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
            toolchain: nightly-2020-10-01
            target: wasm32-unknown-unknown
            override: true
            components: clippy

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -p pallet-xyk -p pallet-assets-info -p pallet-bridge

  unit-test:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Build Docker Image
        uses: docker/build-push-action@v2
        with:
          file: "devops/dockerfiles/node-and-runtime/Dockerfile"
          load: true
          tags: mangatasolutions/mangata-node-ut:${{ github.sha }}
          target: env_builder
      -
        name: Run Tests
        run: |
          pwd
          ls -la
          docker run mangatasolutions/mangata-node-ut:${{ github.sha }} /bin/bash -c \
            'cargo test -p pallet-xyk --no-run'
          docker run mangatasolutions/mangata-node-ut:${{ github.sha }} /bin/bash -c \
            'cargo test -- -Z unstable-options --format json --report-time |cargo2junit' | tee ut-results.xml
          # remove empty tests suites
          sed -i '/<testsuite.*\/>$/d' ut-results.xml
          sed -i 's/<testsuites>/<testsuites time="0">/g' ut-results.xml
          cat ut-results.xml
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Unit Tests
          path: ut-results.xml
          reporter: jest-junit


  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build Only
        id: docker_build
        if: "!contains(github.event.pull_request.labels.*.name, 'skip-build')"
        uses: docker/build-push-action@v2
        with:
          file: "devops/dockerfiles/node-and-runtime/Dockerfile"
          push: false
          tags: mangatasolutions/mangata-node:latest,mangatasolutions/mangata-node:${{ github.sha }},mangatasolutions/mangata-node:${{ github.run_id }}
          outputs: type=docker,dest=/tmp/${{ github.run_id }}.tar
      -
        name: Upload artifact
        uses: actions/upload-artifact@v2
        if: "!contains(github.event.pull_request.labels.*.name, 'skip-build')"
        with:
          name: ${{ github.run_id }}
          path: /tmp/${{ github.run_id }}.tar
      
  e2e-test:
    needs: build
    runs-on: ubuntu-latest
    if: "!contains(github.event.pull_request.labels.*.name, 'skip-e2e-tests')"
    env:
      API_URL: 'ws://172.16.238.10:9944'
      TEST_PALLET_ADDRESS: ${{ secrets.E2E_TEST_PALLET_ADDRESS }}
      TEST_SUDO_NAME: ${{ secrets.E2E_TEST_SUDO_NAME }}
      MANGATA_NODE_VERSION: ${{ github.run_id }}

    steps:
    ####IDK, but this is neccesary for reports
      -
        name: Checkout
        uses: actions/checkout@v2

      -
        name: Download artifact
        if: "!contains(github.event.pull_request.labels.*.name, 'skip-build')"
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.run_id }}
          path: /tmp
      -
        name: Load Docker image
        if: "!contains(github.event.pull_request.labels.*.name, 'skip-build')"
        run: |
          docker load --input /tmp/${{ github.run_id }}.tar
          docker image ls -a
      - 
        name: Checkout tests
        uses: actions/checkout@v2
        with:
          repository: mangata-finance/mangata-e2e
          ref: 'main'
          path: 'e2eTests'
      
      - name: Start mangata-node node with local build
        if: "!contains(github.event.pull_request.labels.*.name, 'skip-build')"
        working-directory: e2eTests
        run: docker-compose -f devops/dockerfiles/node-build/docker-compose.yml up -d
      
      - name: Start mangata-node node with latest
        if: "contains(github.event.pull_request.labels.*.name, 'skip-build')"
        working-directory: e2eTests
        run: docker-compose -f devops/dockerfiles/docker-compose.yml up -d

      - name: Install dependencies
        working-directory: e2eTests
        run: yarn

      - name: Docker ps
        run: docker ps

      - name: Run e2e tests
        working-directory: e2eTests
        run: yarn test-sequential-e2e
     
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()    # run this step even if previous step failed
        with:
          name: JEST Tests            # Name of the check run which will be created
          path: e2eTests/reports/jest-*.xml    # Path to test results
          reporter: jest-junit        # Format of test results

  publish:
    needs: [rustfmt-check, unit-test, e2e-test, clippy]
    runs-on: ubuntu-latest
    if: "!contains(github.event.pull_request.labels.*.name, 'skip-publish') && ${{ github.event_name == 'push'}}"
    #if: # its a push to develop.
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.run_id }}
          path: /tmp
      
      -
        name: Load Docker image
        run: |
          docker load --input /tmp/${{ github.run_id }}.tar
          docker image ls -a

      -
        name: Push previously generated Docker image
        run: |
          docker image push --all-tags mangatasolutions/mangata-node

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        
      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.K8S_CLUSTER_ID }}
      
      # - name: Deploy to DigitalOcean Kubernetes
      #   run: kubectl rollout restart deployment/mangata-node
      #
      # - name: Verify deployment
      #   run: kubectl rollout status deployment/mangata-node
      
