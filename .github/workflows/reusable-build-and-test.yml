name: Build and test

on:
  workflow_call:
    inputs:
      version:
        description: Version to be assigned to the built image
        required: true
        type: string
      branch:
        default: ci
        description: Branch that given job relates to, that value will be used to tag docker image mangatasolutions/mangata-node:<BRANCH_NAME>
        required: true
        type: string
      builder_image:
        default: mangatasolutions/node-builder:multi-nightly-2023-05-22
        description: Docker image used for Rust builds
        required: false
        type: string
      cache-version:
        default: 0
        description: Cache version variable to be used to invalidate cache when needed
        required: false
        type: number

permissions:
  contents: read
  id-token: write

env:
  NODE_DOCKER_IMAGE_REPOSITORY: mangatasolutions/rollup-node

jobs:
  build-node-image:
    name: Build Docker image
    runs-on: [compile-gke]
    container:
      image: ${{ inputs.builder_image }}
      env:
        DOCKER_HOST: "unix:///run/docker/docker.sock"
      volumes:
        - /run/docker:/run/docker
    steps:
      - uses: actions/checkout@v4
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: "${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}"
          service_account: "${{ secrets.GCP_SERVICE_ACCOUNT }}"

      - name: Cache the Cargo dependencies
        uses: mansagroup/gcs-cache-action@v1.0.3
        with:
          bucket: mangata-node-ci-cache
          path: |
            ${{ github.workspace }}/target
            /usr/local/cargo/git
            /usr/local/cargo/registry
            ~/.cache/sccache
          key: node-cache-${{ inputs.cache_version }}-${{ hashFiles('Cargo.lock') }}

      - name: Compile code
        run: cargo build --locked --release

      - name: Rename wasms
        run: |
          cp target/release/wbuild/rollup-runtime/rollup_runtime.compact.compressed.wasm ./rollup_runtime-${{ inputs.version }}.compact.compressed.wasm

      - name: Build and push Docker image
        run: |
          # This is needed to fix an issue when running on self-hosted runners in GKE
          git config --global --add safe.directory /__w/mangata-node/mangata-node

          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          docker build -f devops/dockerfiles/node/Dockerfile \
          --label="git_rev=$(git rev-parse HEAD)" \
          --label="author=github" \
          --label="git_ref=${{ github.ref_name }}" \
          --label="session_length=production" \
          -t ${{ env.NODE_DOCKER_IMAGE_REPOSITORY }}:${{ inputs.version }} \
          -t ${{ env.NODE_DOCKER_IMAGE_REPOSITORY }}:${{ inputs.branch }} .
          docker push ${{ env.NODE_DOCKER_IMAGE_REPOSITORY }}:${{ inputs.version }}
          docker push ${{ env.NODE_DOCKER_IMAGE_REPOSITORY }}:${{ inputs.branch }}

      - name: Compile node code with fast runtime
        run: cargo build --release --no-default-features --features=fast-runtime

      - name: Rename wasms with fast runtime
        run: |
          cp target/release/wbuild/rollup-runtime/rollup_runtime.compact.compressed.wasm ./rollup_runtime-${{ inputs.version }}-fast.compact.compressed.wasm
          
      - name: Build and push Docker image with fast runtime
        run: |
          docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
          docker build -f devops/dockerfiles/node/Dockerfile \
          --label="git_rev=$(git rev-parse HEAD)" \
          --label="author=github" \
          --label="git_ref=${{ github.ref_name }}" \
          --label="session_length=fast" \
          -t ${{ env.NODE_DOCKER_IMAGE_REPOSITORY }}:${{ inputs.version }}-fast \
          -t ${{ env.NODE_DOCKER_IMAGE_REPOSITORY }}:${{ inputs.branch }}-fast .
          docker push ${{ env.NODE_DOCKER_IMAGE_REPOSITORY }}:${{ inputs.version }}-fast
          docker push ${{ env.NODE_DOCKER_IMAGE_REPOSITORY }}:${{ inputs.branch }}-fast

      - uses: actions/upload-artifact@v3
        with:
          name: wasms-${{ inputs.version }}
          path: |
            ./rollup_runtime-${{ inputs.version }}.compact.compressed.wasm
            ./rollup_runtime-${{ inputs.version }}-fast.compact.compressed.wasm
      
      - name: Fix permissions on self-hosted runner
        if: always()
        run: chown -R 1100:1100 $GITHUB_WORKSPACE

  rustfmt-check:
    name: Formatting check
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.builder_image }}
    steps:
      - uses: actions/checkout@v4
      - name: Check formatting
        run: cargo fmt --all -- --check

  clippy-check:
    name: Clippy check
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.builder_image }}
    steps:
      - uses: actions/checkout@v4
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: "${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}"
          service_account: "${{ secrets.GCP_SERVICE_ACCOUNT }}"
      - name: Cache the Cargo dependencies
        uses: mansagroup/gcs-cache-action@v1.0.3
        with:
          bucket: mangata-node-ci-cache
          path: |
            ${{ github.workspace }}/target
            /usr/local/cargo/git
            /usr/local/cargo/registry
          key: cargo-clippy-cache-${{ inputs.cache_version }}-${{ hashFiles('Cargo.lock') }}
      - name: Run clippy
        run: cargo clippy -p pallet-xyk

  unit-test:
    name: Unit tests
    runs-on: [compile-gke]
    container:
      image: ${{ inputs.builder_image }}
    steps:
      - uses: actions/checkout@v4
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: "${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}"
          service_account: "${{ secrets.GCP_SERVICE_ACCOUNT }}"
      - name: Cache the Cargo dependencies
        uses: mansagroup/gcs-cache-action@v1.0.3
        with:
          bucket: mangata-node-ci-cache
          path: |
            ${{ github.workspace }}/target
            /usr/local/cargo/git
            /usr/local/cargo/registry
          key: cargo-unit-cache-${{ inputs.cache_version }}-${{ hashFiles('Cargo.lock') }}
      - name: Run unit tests
        run: cargo test -j2
      
      - name: Fix permissions on self-hosted runner
        if: always()
        run: chown -R 1100:1100 $GITHUB_WORKSPACE

  coverage-report:
    name: Coverage report
    runs-on: [compile-gke]
    container:
      image: ${{ inputs.builder_image }}
      options: --security-opt seccomp=unconfined
    steps:
      - uses: actions/checkout@v4
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: "${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}"
          service_account: "${{ secrets.GCP_SERVICE_ACCOUNT }}"
      - name: Cache the Cargo dependencies
        uses: mansagroup/gcs-cache-action@v1.0.3
        with:
          bucket: mangata-node-ci-cache
          path: |
            ${{ github.workspace }}/target
            /usr/local/cargo/git
            /usr/local/cargo/registry
          key: cargo-coverage-cache-${{ inputs.cache_version }}-${{ hashFiles('Cargo.lock') }}
      - name: Install cargo-tarpaulin
        run: cargo install cargo-tarpaulin@0.26.1 --locked
      - name: Generate coverage report with cargo-tarpaulin
        run: cargo tarpaulin --timeout 120 --workspace -e rollup-runtime-integration-test rollup-node rollup-runtime --exclude-files **/mock.rs **/weights.rs **/weights/* --out Xml
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.ORG_CODECOV_TOKEN }}
          fail_ci_if_error: false
      
      - name: Fix permissions on self-hosted runner
        if: always()
        run: chown -R 1100:1100 $GITHUB_WORKSPACE

  run-benchmarks-tests:
    name: Run benchmark tests
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.builder_image }}
    steps:
      - uses: actions/checkout@v4
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: "${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}"
          service_account: "${{ secrets.GCP_SERVICE_ACCOUNT }}"
      - name: Cache the Cargo dependencies
        uses: mansagroup/gcs-cache-action@v1.0.3
        with:
          bucket: mangata-node-ci-cache
          path: |
            ${{ github.workspace }}/target
            /usr/local/cargo/git
            /usr/local/cargo/registry
          key: cargo-benchmark-cache-${{ inputs.cache_version }}-${{ hashFiles('Cargo.lock') }}
      - name: Run benchmarks tests
        run: cargo test --release -j8 --features=runtime-benchmarks -p pallet-xyk -p pallet-issuance -p pallet-multipurpose-liquidity -p pallet-fee-lock
      - name: Run benchmarks tests
        run: cargo test --release -j8 --features=runtime-benchmarks -p pallet-bootstrap
      # NOTE: MGX-742
      - name: Run benchmarks tests
        run: cargo test --release -j8 --features=runtime-benchmarks -p pallet-proof-of-stake

  # Disabled since we have no live testnet running
  # build-and-run-try-runtime:
  #   name: Run try-runtime checks
  #   runs-on: [compile-gke]
  #   container:
  #     image: ${{ inputs.builder_image }}
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Authenticate to Google Cloud
  #       uses: google-github-actions/auth@v1
  #       with:
  #         workload_identity_provider: "${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}"
  #         service_account: "${{ secrets.GCP_SERVICE_ACCOUNT }}"
  #     - name: Cache the Cargo dependencies
  #       uses: mansagroup/gcs-cache-action@v1.0.3
  #       with:
  #         bucket: mangata-node-ci-cache
  #         path: |
  #           ${{ github.workspace }}/target
  #           /usr/local/cargo/git
  #           /usr/local/cargo/registry
  #           ~/.cache/sccache
  #         key: cargo-try-runtime-${{ inputs.cache_version }}-${{ hashFiles('Cargo.lock') }}

  #     - name: Build try-runtime Rococo & Kusama node
  #       run: cargo build --release --features=try-runtime

  #     - name: Run try-runtime Kusama Mainnet
  #       run: try-runtime --runtime=target/release/wbuild/rollup-runtime/rollup_runtime.wasm on-runtime-upgrade live --uri wss://rollup-rpc.mangata.online:443

  #     - name: Fix permissions on self-hosted runner
  #       if: always()
  #       run: chown -R 1100:1100 $GITHUB_WORKSPACE

  run-benchmarks:
    name: Run runtime benchmarks
    # `performance` self-hosted runners have 8 cores and 16GB of RAM
    runs-on: [performance-gke]
    env:
      STEPS: 2
      REPEATS: 1
    container:
      image: ${{ inputs.builder_image }}
    steps:
      - uses: actions/checkout@v4
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: "${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}"
          service_account: "${{ secrets.GCP_SERVICE_ACCOUNT }}"

      - name: Cache the Cargo dependencies
        uses: mansagroup/gcs-cache-action@v1.0.3
        with:
          bucket: mangata-node-ci-cache
          path: |
            ${{ github.workspace }}/target
            /usr/local/cargo/git
            /usr/local/cargo/registry
            ~/.cache/sccache
          key: runtime-benchmark-cache-${{ inputs.cache_version }}-${{ hashFiles('Cargo.lock') }}

      - name: Compile code
        run: cargo build --release --no-default-features --features=runtime-benchmarks

      - name: Set full benchmark params
        if: ${{ contains(github.event.pull_request.labels.*.name, 'full-benchmarks') }}
        run: |
          echo "STEPS=50" >> $GITHUB_ENV
          echo "REPEATS=20" >> $GITHUB_ENV

      - name: Run pallet benchmarks
        run: |
          mkdir ./benchmarks && target/release/rollup-node benchmark pallet \
          -l=info,runtime::collective=warn,xyk=warn \
          --chain rollup-local \
          --wasm-execution compiled \
          --pallet '*' \
          --extrinsic '*' \
          --steps ${{ env.STEPS }} \
          --repeat ${{ env.REPEATS }} \
          --template ./templates/module-weight-template.hbs \
          --output ./benchmarks/

      - name: Run block & extrinsic overhead benchmarks
        run: |
          target/release/rollup-node benchmark overhead --chain rollup-local -lblock_builder=debug --max-ext-per-block 50000 --base-path .
          cp block_weights.rs extrinsic_weights.rs ./benchmarks

      - name: Upload logs and docker images to GitHub
        if: ${{ contains(github.event.pull_request.labels.*.name, 'full-benchmarks') }}
        uses: actions/upload-artifact@v3.1.1
        with:
          name: benchmarks
          path: ./benchmarks
      
      - name: Fix permissions on self-hosted runner
        if: always()
        run: chown -R 1100:1100 $GITHUB_WORKSPACE

