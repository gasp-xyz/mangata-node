[workspace.package]
authors = ["Mangata Team"]
edition = "2018"
repository = "https://github.com/mangata-finance/mangata-node.git"

[profile.dev]
split-debuginfo = "unpacked"

[profile.release]
panic = 'unwind'

[profile.production]
inherits = "release"
lto = true
codegen-units = 1

[workspace]
resolver = "2"
members = [
	'node',
	'pallets/*',
	'rpc/nonce',
	'runtime/common',
	'runtime/mangata-kusama',
	'runtime/mangata-rococo',
	'runtime/integration-test',
]

# # patch generated by ./scripts/dev_manifest.sh
# [patch."https://github.com/mangata-finance/polkadot-sdk"]
# binary-merkle-tree = { path = "../polkadot-sdk/substrate/utils/binary-merkle-tree" }
# cumulus-client-cli = { path = "../polkadot-sdk/cumulus/client/cli" }
# cumulus-client-collator = { path = "../polkadot-sdk/cumulus/client/collator" }
# cumulus-client-consensus-aura = { path = "../polkadot-sdk/cumulus/client/consensus/aura" }
# cumulus-client-consensus-common = { path = "../polkadot-sdk/cumulus/client/consensus/common" }
# cumulus-client-consensus-proposer = { path = "../polkadot-sdk/cumulus/client/consensus/proposer" }
# cumulus-client-consensus-relay-chain = { path = "../polkadot-sdk/cumulus/client/consensus/relay-chain" }
# cumulus-client-network = { path = "../polkadot-sdk/cumulus/client/network" }
# cumulus-client-pov-recovery = { path = "../polkadot-sdk/cumulus/client/pov-recovery" }
# cumulus-client-service = { path = "../polkadot-sdk/cumulus/client/service" }
# cumulus-pallet-aura-ext = { path = "../polkadot-sdk/cumulus/pallets/aura-ext" }
# cumulus-pallet-dmp-queue = { path = "../polkadot-sdk/cumulus/pallets/dmp-queue" }
# cumulus-pallet-parachain-system = { path = "../polkadot-sdk/cumulus/pallets/parachain-system" }
# cumulus-pallet-parachain-system-proc-macro = { path = "../polkadot-sdk/cumulus/pallets/parachain-system/proc-macro" }
# cumulus-pallet-session-benchmarking = { path = "../polkadot-sdk/cumulus/pallets/session-benchmarking" }
# cumulus-pallet-xcm = { path = "../polkadot-sdk/cumulus/pallets/xcm" }
# cumulus-pallet-xcmp-queue = { path = "../polkadot-sdk/cumulus/pallets/xcmp-queue" }
# cumulus-primitives-aura = { path = "../polkadot-sdk/cumulus/primitives/aura" }
# cumulus-primitives-core = { path = "../polkadot-sdk/cumulus/primitives/core" }
# cumulus-primitives-parachain-inherent = { path = "../polkadot-sdk/cumulus/primitives/parachain-inherent" }
# cumulus-primitives-timestamp = { path = "../polkadot-sdk/cumulus/primitives/timestamp" }
# cumulus-primitives-utility = { path = "../polkadot-sdk/cumulus/primitives/utility" }
# cumulus-relay-chain-inprocess-interface = { path = "../polkadot-sdk/cumulus/client/relay-chain-inprocess-interface" }
# cumulus-relay-chain-interface = { path = "../polkadot-sdk/cumulus/client/relay-chain-interface" }
# cumulus-relay-chain-minimal-node = { path = "../polkadot-sdk/cumulus/client/relay-chain-minimal-node" }
# cumulus-relay-chain-rpc-interface = { path = "../polkadot-sdk/cumulus/client/relay-chain-rpc-interface" }
# cumulus-test-relay-sproof-builder = { path = "../polkadot-sdk/cumulus/test/relay-sproof-builder" }
# extrinsic-shuffler = { path = "../polkadot-sdk/substrate/primitives/shuffler" }
# fork-tree = { path = "../polkadot-sdk/substrate/utils/fork-tree" }
# frame-benchmarking = { path = "../polkadot-sdk/substrate/frame/benchmarking" }
# frame-benchmarking-cli = { path = "../polkadot-sdk/substrate/utils/frame/benchmarking-cli" }
# frame-election-provider-solution-type = { path = "../polkadot-sdk/substrate/frame/election-provider-support/solution-type" }
# frame-election-provider-support = { path = "../polkadot-sdk/substrate/frame/election-provider-support" }
# frame-executive = { path = "../polkadot-sdk/substrate/frame/executive" }
# frame-remote-externalities = { path = "../polkadot-sdk/substrate/utils/frame/remote-externalities" }
# frame-support = { path = "../polkadot-sdk/substrate/frame/support" }
# frame-support-procedural = { path = "../polkadot-sdk/substrate/frame/support/procedural" }
# frame-support-procedural-tools = { path = "../polkadot-sdk/substrate/frame/support/procedural/tools" }
# frame-support-procedural-tools-derive = { path = "../polkadot-sdk/substrate/frame/support/procedural/tools/derive" }
# frame-system = { path = "../polkadot-sdk/substrate/frame/system" }
# frame-system-benchmarking = { path = "../polkadot-sdk/substrate/frame/system/benchmarking" }
# frame-system-rpc-runtime-api = { path = "../polkadot-sdk/substrate/frame/system/rpc/runtime-api" }
# frame-try-runtime = { path = "../polkadot-sdk/substrate/frame/try-runtime" }
# kusama-runtime-constants = { path = "../polkadot-sdk/polkadot/runtime/kusama/constants" }
# mangata-support = { path = "../polkadot-sdk/substrate/frame/mangata-support" }
# mangata-types = { path = "../polkadot-sdk/substrate/primitives/mangata-types" }
# mmr-gadget = { path = "../polkadot-sdk/substrate/client/merkle-mountain-range" }
# mmr-rpc = { path = "../polkadot-sdk/substrate/client/merkle-mountain-range/rpc" }
# pallet-asset-tx-payment = { path = "../polkadot-sdk/substrate/frame/transaction-payment/asset-tx-payment" }
# pallet-assets = { path = "../polkadot-sdk/substrate/frame/assets" }
# pallet-aura = { path = "../polkadot-sdk/substrate/frame/aura" }
# pallet-authority-discovery = { path = "../polkadot-sdk/substrate/frame/authority-discovery" }
# pallet-authorship = { path = "../polkadot-sdk/substrate/frame/authorship" }
# pallet-babe = { path = "../polkadot-sdk/substrate/frame/babe" }
# pallet-bags-list = { path = "../polkadot-sdk/substrate/frame/bags-list" }
# pallet-balances = { path = "../polkadot-sdk/substrate/frame/balances" }
# pallet-beefy = { path = "../polkadot-sdk/substrate/frame/beefy" }
# pallet-beefy-mmr = { path = "../polkadot-sdk/substrate/frame/beefy-mmr" }
# pallet-bounties = { path = "../polkadot-sdk/substrate/frame/bounties" }
# pallet-child-bounties = { path = "../polkadot-sdk/substrate/frame/child-bounties" }
# pallet-collator-selection = { path = "../polkadot-sdk/cumulus/pallets/collator-selection" }
# pallet-collective = { path = "../polkadot-sdk/substrate/frame/collective" }
# pallet-collective-mangata = { path = "../polkadot-sdk/substrate/frame/collective-mangata" }
# pallet-conviction-voting = { path = "../polkadot-sdk/substrate/frame/conviction-voting" }
# pallet-democracy = { path = "../polkadot-sdk/substrate/frame/democracy" }
# pallet-election-provider-multi-phase = { path = "../polkadot-sdk/substrate/frame/election-provider-multi-phase" }
# pallet-elections-phragmen = { path = "../polkadot-sdk/substrate/frame/elections-phragmen" }
# pallet-fast-unstake = { path = "../polkadot-sdk/substrate/frame/fast-unstake" }
# pallet-grandpa = { path = "../polkadot-sdk/substrate/frame/grandpa" }
# pallet-identity = { path = "../polkadot-sdk/substrate/frame/identity" }
# pallet-im-online = { path = "../polkadot-sdk/substrate/frame/im-online" }
# pallet-indices = { path = "../polkadot-sdk/substrate/frame/indices" }
# pallet-membership = { path = "../polkadot-sdk/substrate/frame/membership" }
# pallet-message-queue = { path = "../polkadot-sdk/substrate/frame/message-queue" }
# pallet-mmr = { path = "../polkadot-sdk/substrate/frame/merkle-mountain-range" }
# pallet-multisig = { path = "../polkadot-sdk/substrate/frame/multisig" }
# pallet-nis = { path = "../polkadot-sdk/substrate/frame/nis" }
# pallet-nomination-pools = { path = "../polkadot-sdk/substrate/frame/nomination-pools" }
# pallet-nomination-pools-runtime-api = { path = "../polkadot-sdk/substrate/frame/nomination-pools/runtime-api" }
# pallet-offences = { path = "../polkadot-sdk/substrate/frame/offences" }
# pallet-preimage = { path = "../polkadot-sdk/substrate/frame/preimage" }
# pallet-proxy = { path = "../polkadot-sdk/substrate/frame/proxy" }
# pallet-ranked-collective = { path = "../polkadot-sdk/substrate/frame/ranked-collective" }
# pallet-recovery = { path = "../polkadot-sdk/substrate/frame/recovery" }
# pallet-referenda = { path = "../polkadot-sdk/substrate/frame/referenda" }
# pallet-root-testing = { path = "../polkadot-sdk/substrate/frame/root-testing" }
# pallet-scheduler = { path = "../polkadot-sdk/substrate/frame/scheduler" }
# pallet-session = { path = "../polkadot-sdk/substrate/frame/session" }
# pallet-society = { path = "../polkadot-sdk/substrate/frame/society" }
# pallet-staking = { path = "../polkadot-sdk/substrate/frame/staking" }
# pallet-staking-reward-curve = { path = "../polkadot-sdk/substrate/frame/staking/reward-curve" }
# pallet-staking-reward-fn = { path = "../polkadot-sdk/substrate/frame/staking/reward-fn" }
# pallet-staking-runtime-api = { path = "../polkadot-sdk/substrate/frame/staking/runtime-api" }
# pallet-state-trie-migration = { path = "../polkadot-sdk/substrate/frame/state-trie-migration" }
# pallet-sudo = { path = "../polkadot-sdk/substrate/frame/sudo" }
# pallet-sudo-mangata = { path = "../polkadot-sdk/substrate/frame/sudo-mangata" }
# pallet-timestamp = { path = "../polkadot-sdk/substrate/frame/timestamp" }
# pallet-tips = { path = "../polkadot-sdk/substrate/frame/tips" }
# pallet-transaction-payment = { path = "../polkadot-sdk/substrate/frame/transaction-payment" }
# pallet-transaction-payment-mangata = { path = "../polkadot-sdk/substrate/frame/transaction-payment-mangata" }
# pallet-transaction-payment-mangata-rpc = { path = "../polkadot-sdk/substrate/frame/transaction-payment-mangata/rpc" }
# pallet-transaction-payment-mangata-rpc-runtime-api = { path = "../polkadot-sdk/substrate/frame/transaction-payment-mangata/rpc/runtime-api" }
# pallet-transaction-payment-rpc = { path = "../polkadot-sdk/substrate/frame/transaction-payment/rpc" }
# pallet-transaction-payment-rpc-runtime-api = { path = "../polkadot-sdk/substrate/frame/transaction-payment/rpc/runtime-api" }
# pallet-treasury = { path = "../polkadot-sdk/substrate/frame/treasury" }
# pallet-utility = { path = "../polkadot-sdk/substrate/frame/utility" }
# pallet-utility-mangata = { path = "../polkadot-sdk/substrate/frame/utility-mangata" }
# pallet-vesting = { path = "../polkadot-sdk/substrate/frame/vesting" }
# pallet-vesting-mangata = { path = "../polkadot-sdk/substrate/frame/vesting-mangata" }
# pallet-whitelist = { path = "../polkadot-sdk/substrate/frame/whitelist" }
# pallet-xcm = { path = "../polkadot-sdk/polkadot/xcm/pallet-xcm" }
# parachain-info = { path = "../polkadot-sdk/cumulus/parachains/pallets/parachain-info" }
# parachains-common = { path = "../polkadot-sdk/cumulus/parachains/common" }
# polkadot-approval-distribution = { path = "../polkadot-sdk/polkadot/node/network/approval-distribution" }
# polkadot-availability-bitfield-distribution = { path = "../polkadot-sdk/polkadot/node/network/bitfield-distribution" }
# polkadot-availability-distribution = { path = "../polkadot-sdk/polkadot/node/network/availability-distribution" }
# polkadot-availability-recovery = { path = "../polkadot-sdk/polkadot/node/network/availability-recovery" }
# polkadot-cli = { path = "../polkadot-sdk/polkadot/cli" }
# polkadot-collator-protocol = { path = "../polkadot-sdk/polkadot/node/network/collator-protocol" }
# polkadot-core-primitives = { path = "../polkadot-sdk/polkadot/core-primitives" }
# polkadot-dispute-distribution = { path = "../polkadot-sdk/polkadot/node/network/dispute-distribution" }
# polkadot-erasure-coding = { path = "../polkadot-sdk/polkadot/erasure-coding" }
# polkadot-gossip-support = { path = "../polkadot-sdk/polkadot/node/network/gossip-support" }
# polkadot-network-bridge = { path = "../polkadot-sdk/polkadot/node/network/bridge" }
# polkadot-node-collation-generation = { path = "../polkadot-sdk/polkadot/node/collation-generation" }
# polkadot-node-core-approval-voting = { path = "../polkadot-sdk/polkadot/node/core/approval-voting" }
# polkadot-node-core-av-store = { path = "../polkadot-sdk/polkadot/node/core/av-store" }
# polkadot-node-core-backing = { path = "../polkadot-sdk/polkadot/node/core/backing" }
# polkadot-node-core-bitfield-signing = { path = "../polkadot-sdk/polkadot/node/core/bitfield-signing" }
# polkadot-node-core-candidate-validation = { path = "../polkadot-sdk/polkadot/node/core/candidate-validation" }
# polkadot-node-core-chain-api = { path = "../polkadot-sdk/polkadot/node/core/chain-api" }
# polkadot-node-core-chain-selection = { path = "../polkadot-sdk/polkadot/node/core/chain-selection" }
# polkadot-node-core-dispute-coordinator = { path = "../polkadot-sdk/polkadot/node/core/dispute-coordinator" }
# polkadot-node-core-parachains-inherent = { path = "../polkadot-sdk/polkadot/node/core/parachains-inherent" }
# polkadot-node-core-prospective-parachains = { path = "../polkadot-sdk/polkadot/node/core/prospective-parachains" }
# polkadot-node-core-provisioner = { path = "../polkadot-sdk/polkadot/node/core/provisioner" }
# polkadot-node-core-pvf = { path = "../polkadot-sdk/polkadot/node/core/pvf" }
# polkadot-node-core-pvf-checker = { path = "../polkadot-sdk/polkadot/node/core/pvf-checker" }
# polkadot-node-core-pvf-common = { path = "../polkadot-sdk/polkadot/node/core/pvf/common" }
# polkadot-node-core-runtime-api = { path = "../polkadot-sdk/polkadot/node/core/runtime-api" }
# polkadot-node-jaeger = { path = "../polkadot-sdk/polkadot/node/jaeger" }
# polkadot-node-metrics = { path = "../polkadot-sdk/polkadot/node/metrics" }
# polkadot-node-network-protocol = { path = "../polkadot-sdk/polkadot/node/network/protocol" }
# polkadot-node-primitives = { path = "../polkadot-sdk/polkadot/node/primitives" }
# polkadot-node-subsystem = { path = "../polkadot-sdk/polkadot/node/subsystem" }
# polkadot-node-subsystem-types = { path = "../polkadot-sdk/polkadot/node/subsystem-types" }
# polkadot-node-subsystem-util = { path = "../polkadot-sdk/polkadot/node/subsystem-util" }
# polkadot-overseer = { path = "../polkadot-sdk/polkadot/node/overseer" }
# polkadot-parachain-primitives = { path = "../polkadot-sdk/polkadot/parachain" }
# polkadot-primitives = { path = "../polkadot-sdk/polkadot/primitives" }
# polkadot-rpc = { path = "../polkadot-sdk/polkadot/rpc" }
# polkadot-runtime-common = { path = "../polkadot-sdk/polkadot/runtime/common" }
# polkadot-runtime-constants = { path = "../polkadot-sdk/polkadot/runtime/polkadot/constants" }
# polkadot-runtime-metrics = { path = "../polkadot-sdk/polkadot/runtime/metrics" }
# polkadot-runtime-parachains = { path = "../polkadot-sdk/polkadot/runtime/parachains" }
# polkadot-service = { path = "../polkadot-sdk/polkadot/node/service" }
# polkadot-statement-distribution = { path = "../polkadot-sdk/polkadot/node/network/statement-distribution" }
# polkadot-statement-table = { path = "../polkadot-sdk/polkadot/statement-table" }
# polkadot-test-runtime = { path = "../polkadot-sdk/polkadot/runtime/test-runtime" }
# polkadot-test-service = { path = "../polkadot-sdk/polkadot/node/test/service" }
# rococo-runtime = { path = "../polkadot-sdk/polkadot/runtime/rococo" }
# rococo-runtime-constants = { path = "../polkadot-sdk/polkadot/runtime/rococo/constants" }
# sc-allocator = { path = "../polkadot-sdk/substrate/client/allocator" }
# sc-authority-discovery = { path = "../polkadot-sdk/substrate/client/authority-discovery" }
# sc-basic-authorship = { path = "../polkadot-sdk/substrate/client/basic-authorship" }
# sc-basic-authorship-ver = { path = "../polkadot-sdk/substrate/client/basic-authorship-ver" }
# sc-block-builder = { path = "../polkadot-sdk/substrate/client/block-builder" }
# sc-block-builder-ver = { path = "../polkadot-sdk/substrate/client/block-builder-ver" }
# sc-chain-spec = { path = "../polkadot-sdk/substrate/client/chain-spec" }
# sc-chain-spec-derive = { path = "../polkadot-sdk/substrate/client/chain-spec/derive" }
# sc-cli = { path = "../polkadot-sdk/substrate/client/cli" }
# sc-client-api = { path = "../polkadot-sdk/substrate/client/api" }
# sc-client-db = { path = "../polkadot-sdk/substrate/client/db" }
# sc-consensus = { path = "../polkadot-sdk/substrate/client/consensus/common" }
# sc-consensus-aura = { path = "../polkadot-sdk/substrate/client/consensus/aura" }
# sc-consensus-babe = { path = "../polkadot-sdk/substrate/client/consensus/babe" }
# sc-consensus-babe-rpc = { path = "../polkadot-sdk/substrate/client/consensus/babe/rpc" }
# sc-consensus-beefy = { path = "../polkadot-sdk/substrate/client/consensus/beefy" }
# sc-consensus-beefy-rpc = { path = "../polkadot-sdk/substrate/client/consensus/beefy/rpc" }
# sc-consensus-epochs = { path = "../polkadot-sdk/substrate/client/consensus/epochs" }
# sc-consensus-grandpa = { path = "../polkadot-sdk/substrate/client/consensus/grandpa" }
# sc-consensus-grandpa-rpc = { path = "../polkadot-sdk/substrate/client/consensus/grandpa/rpc" }
# sc-consensus-slots = { path = "../polkadot-sdk/substrate/client/consensus/slots" }
# sc-executor = { path = "../polkadot-sdk/substrate/client/executor" }
# sc-executor-common = { path = "../polkadot-sdk/substrate/client/executor/common" }
# sc-executor-wasmtime = { path = "../polkadot-sdk/substrate/client/executor/wasmtime" }
# sc-informant = { path = "../polkadot-sdk/substrate/client/informant" }
# sc-keystore = { path = "../polkadot-sdk/substrate/client/keystore" }
# sc-network = { path = "../polkadot-sdk/substrate/client/network" }
# sc-network-bitswap = { path = "../polkadot-sdk/substrate/client/network/bitswap" }
# sc-network-common = { path = "../polkadot-sdk/substrate/client/network/common" }
# sc-network-gossip = { path = "../polkadot-sdk/substrate/client/network-gossip" }
# sc-network-light = { path = "../polkadot-sdk/substrate/client/network/light" }
# sc-network-sync = { path = "../polkadot-sdk/substrate/client/network/sync" }
# sc-network-transactions = { path = "../polkadot-sdk/substrate/client/network/transactions" }
# sc-offchain = { path = "../polkadot-sdk/substrate/client/offchain" }
# sc-proposer-metrics = { path = "../polkadot-sdk/substrate/client/proposer-metrics" }
# sc-rpc = { path = "../polkadot-sdk/substrate/client/rpc" }
# sc-rpc-api = { path = "../polkadot-sdk/substrate/client/rpc-api" }
# sc-rpc-server = { path = "../polkadot-sdk/substrate/client/rpc-servers" }
# sc-rpc-spec-v2 = { path = "../polkadot-sdk/substrate/client/rpc-spec-v2" }
# sc-service = { path = "../polkadot-sdk/substrate/client/service" }
# sc-state-db = { path = "../polkadot-sdk/substrate/client/state-db" }
# sc-storage-monitor = { path = "../polkadot-sdk/substrate/client/storage-monitor" }
# sc-sync-state-rpc = { path = "../polkadot-sdk/substrate/client/sync-state-rpc" }
# sc-sysinfo = { path = "../polkadot-sdk/substrate/client/sysinfo" }
# sc-telemetry = { path = "../polkadot-sdk/substrate/client/telemetry" }
# sc-tracing = { path = "../polkadot-sdk/substrate/client/tracing" }
# sc-tracing-proc-macro = { path = "../polkadot-sdk/substrate/client/tracing/proc-macro" }
# sc-transaction-pool = { path = "../polkadot-sdk/substrate/client/transaction-pool" }
# sc-transaction-pool-api = { path = "../polkadot-sdk/substrate/client/transaction-pool/api" }
# sc-utils = { path = "../polkadot-sdk/substrate/client/utils" }
# slot-range-helper = { path = "../polkadot-sdk/polkadot/runtime/common/slot_range_helper" }
# sp-api = { path = "../polkadot-sdk/substrate/primitives/api" }
# sp-api-proc-macro = { path = "../polkadot-sdk/substrate/primitives/api/proc-macro" }
# sp-application-crypto = { path = "../polkadot-sdk/substrate/primitives/application-crypto" }
# sp-arithmetic = { path = "../polkadot-sdk/substrate/primitives/arithmetic" }
# sp-authority-discovery = { path = "../polkadot-sdk/substrate/primitives/authority-discovery" }
# sp-block-builder = { path = "../polkadot-sdk/substrate/primitives/block-builder" }
# sp-blockchain = { path = "../polkadot-sdk/substrate/primitives/blockchain" }
# sp-consensus = { path = "../polkadot-sdk/substrate/primitives/consensus/common" }
# sp-consensus-aura = { path = "../polkadot-sdk/substrate/primitives/consensus/aura" }
# sp-consensus-babe = { path = "../polkadot-sdk/substrate/primitives/consensus/babe" }
# sp-consensus-beefy = { path = "../polkadot-sdk/substrate/primitives/consensus/beefy" }
# sp-consensus-grandpa = { path = "../polkadot-sdk/substrate/primitives/consensus/grandpa" }
# sp-consensus-slots = { path = "../polkadot-sdk/substrate/primitives/consensus/slots" }
# sp-core = { path = "../polkadot-sdk/substrate/primitives/core" }
# sp-core-hashing = { path = "../polkadot-sdk/substrate/primitives/core/hashing" }
# sp-core-hashing-proc-macro = { path = "../polkadot-sdk/substrate/primitives/core/hashing/proc-macro" }
# sp-database = { path = "../polkadot-sdk/substrate/primitives/database" }
# sp-debug-derive = { path = "../polkadot-sdk/substrate/primitives/debug-derive" }
# sp-externalities = { path = "../polkadot-sdk/substrate/primitives/externalities" }
# sp-genesis-builder = { path = "../polkadot-sdk/substrate/primitives/genesis-builder" }
# sp-inherents = { path = "../polkadot-sdk/substrate/primitives/inherents" }
# sp-io = { path = "../polkadot-sdk/substrate/primitives/io" }
# sp-keyring = { path = "../polkadot-sdk/substrate/primitives/keyring" }
# sp-keystore = { path = "../polkadot-sdk/substrate/primitives/keystore" }
# sp-maybe-compressed-blob = { path = "../polkadot-sdk/substrate/primitives/maybe-compressed-blob" }
# sp-metadata-ir = { path = "../polkadot-sdk/substrate/primitives/metadata-ir" }
# sp-mmr-primitives = { path = "../polkadot-sdk/substrate/primitives/merkle-mountain-range" }
# sp-npos-elections = { path = "../polkadot-sdk/substrate/primitives/npos-elections" }
# sp-offchain = { path = "../polkadot-sdk/substrate/primitives/offchain" }
# sp-panic-handler = { path = "../polkadot-sdk/substrate/primitives/panic-handler" }
# sp-rpc = { path = "../polkadot-sdk/substrate/primitives/rpc" }
# sp-runtime = { path = "../polkadot-sdk/substrate/primitives/runtime" }
# sp-runtime-interface = { path = "../polkadot-sdk/substrate/primitives/runtime-interface" }
# sp-runtime-interface-proc-macro = { path = "../polkadot-sdk/substrate/primitives/runtime-interface/proc-macro" }
# sp-session = { path = "../polkadot-sdk/substrate/primitives/session" }
# sp-staking = { path = "../polkadot-sdk/substrate/primitives/staking" }
# sp-state-machine = { path = "../polkadot-sdk/substrate/primitives/state-machine" }
# sp-statement-store = { path = "../polkadot-sdk/substrate/primitives/statement-store" }
# sp-std = { path = "../polkadot-sdk/substrate/primitives/std" }
# sp-storage = { path = "../polkadot-sdk/substrate/primitives/storage" }
# sp-timestamp = { path = "../polkadot-sdk/substrate/primitives/timestamp" }
# sp-tracing = { path = "../polkadot-sdk/substrate/primitives/tracing" }
# sp-transaction-pool = { path = "../polkadot-sdk/substrate/primitives/transaction-pool" }
# sp-transaction-storage-proof = { path = "../polkadot-sdk/substrate/primitives/transaction-storage-proof" }
# sp-trie = { path = "../polkadot-sdk/substrate/primitives/trie" }
# sp-ver = { path = "../polkadot-sdk/substrate/primitives/ver" }
# sp-version = { path = "../polkadot-sdk/substrate/primitives/version" }
# sp-version-proc-macro = { path = "../polkadot-sdk/substrate/primitives/version/proc-macro" }
# sp-wasm-interface = { path = "../polkadot-sdk/substrate/primitives/wasm-interface" }
# sp-weights = { path = "../polkadot-sdk/substrate/primitives/weights" }
# staging-kusama-runtime = { path = "../polkadot-sdk/polkadot/runtime/kusama" }
# staging-xcm = { path = "../polkadot-sdk/polkadot/xcm" }
# staging-xcm-builder = { path = "../polkadot-sdk/polkadot/xcm/xcm-builder" }
# staging-xcm-executor = { path = "../polkadot-sdk/polkadot/xcm/xcm-executor" }
# substrate-build-script-utils = { path = "../polkadot-sdk/substrate/utils/build-script-utils" }
# substrate-frame-rpc-system = { path = "../polkadot-sdk/substrate/utils/frame/rpc/system" }
# substrate-prometheus-endpoint = { path = "../polkadot-sdk/substrate/utils/prometheus" }
# substrate-rpc-client = { path = "../polkadot-sdk/substrate/utils/frame/rpc/client" }
# substrate-state-trie-migration-rpc = { path = "../polkadot-sdk/substrate/utils/frame/rpc/state-trie-migration-rpc" }
# substrate-test-client = { path = "../polkadot-sdk/substrate/test-utils/client" }
# substrate-wasm-builder = { path = "../polkadot-sdk/substrate/utils/wasm-builder" }
# test-runtime-constants = { path = "../polkadot-sdk/polkadot/runtime/test-runtime/constants" }
# tracing-gum = { path = "../polkadot-sdk/polkadot/node/gum" }
# tracing-gum-proc-macro = { path = "../polkadot-sdk/polkadot/node/gum/proc-macro" }
# try-runtime-cli = { path = "../polkadot-sdk/substrate/utils/frame/try-runtime/cli" }
# ver-api = { path = "../polkadot-sdk/substrate/primitives/ver-api" }
# westend-runtime-constants = { path = "../polkadot-sdk/polkadot/runtime/westend/constants" }
# xcm-emulator = { path = "../polkadot-sdk/cumulus/xcm/xcm-emulator" }
# xcm-procedural = { path = "../polkadot-sdk/polkadot/xcm/procedural" }
# xcm-simulator = { path = "../polkadot-sdk/polkadot/xcm/xcm-simulator" }

# # patch generated by ./scripts/dev_manifest.sh
# [patch."https://github.com/mangata-finance/open-runtime-module-library"]
# orml-xcm = { path = "../open-runtime-module-library/xcm" }
# orml-traits = { path = "../open-runtime-module-library/traits" }
# orml-xtokens = { path = "../open-runtime-module-library/xtokens" }
# orml-asset-registry = { path = "../open-runtime-module-library/asset-registry" }
# orml-xcm-support = { path = "../open-runtime-module-library/xcm-support" }
# orml-utilities = { path = "../open-runtime-module-library/utilities" }
# orml-unknown-tokens = { path = "../open-runtime-module-library/unknown-tokens" }
# orml-tokens = { path = "../open-runtime-module-library/tokens" }

# # patch generated by ./scripts/dev_manifest.sh
# [patch."https://github.com/mangata-finance/crowdloan-rewards"]
# pallet-crowdloan-rewards = { path = "../crowdloan-rewards" }
