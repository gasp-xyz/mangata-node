apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: node-02
  labels: {{- include "node.labels" . | nindent 4 }}
    service: node-02
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "node.selectorLabels" . | nindent 6 }}
      service: node-02
  serviceName: node-02
  template:
    metadata:
      labels:
        {{- include "node.labels" . | nindent 8 }}
        service: node-02
    spec:
      initContainers:
        - name: chainspec-generator
          image: {{ .Values.relaychain.image | quote }}
          command: 
            - "/bin/bash"
            - "-c" 
            - "/usr/bin/polkadot build-spec --chain=rococo-local --disable-default-bootnode --raw > /etc/mangata/local.json"
          volumeMounts:
            - mountPath: /etc/mangata/
              name: node-chainspec-volume
        - name: inject-keys
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          command: ["/bin/bash"]
          args:
            - -c
            - |
              set -eu
              {{- range $keys := .Values.node.node_02.keys }}
              if [ ! -f /var/run/secrets/{{ .type }}/type ]; then
                 echo "Error: File /var/run/secrets/{{ .type }}/type does not exist"
                 exit 1
              fi
              /mangata/node key insert --chain public-testnet --keystore-path /keystore \
              --key-type $(cat /var/run/secrets/{{ .type }}/type) \
              --scheme $(cat /var/run/secrets/{{ .type }}/scheme) \
              --suri /var/run/secrets/{{ .type }}/seed \
              && echo "Inserted key {{ .type }} into Keystore" \
              || echo "Failed to insert key {{ .type}} into Keystore."
              {{- end }}
          volumeMounts:
            - mountPath: /keystore
              name: chain-keystore
          {{- range $keys := .Values.node.node_02.keys }}
            - mountPath: /var/run/secrets/{{ .type }}
              name: {{ .type }}
          {{- end }}
      containers:
        - name: node-02
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: Always
          command:
            # parachain
            - /mangata/node
            - --name=node-02
            - --chain=public-testnet
            - --base-path=/mangata/data
            - --keystore-path=/keystore
            - --collator
            - --force-authoring
            - --port=30333
            - --ws-port=9944
            - --rpc-port=9933
            - --prometheus-port=9716
            - --unsafe-ws-external
            - --unsafe-rpc-external
            - --prometheus-external
            - --rpc-methods=Unsafe
            - --rpc-cors=all
            - --node-key=0000000000000000000000000000000000000000000000000000000000000004
            {{- if .Values.remoteCluster }}
            - "--public-addr=/dns4/node-02-{{ .Values.env }}.{{ .Values.domainZone }}/tcp/30333"
            {{- end }}
            - --bootnodes=/dns4/node-01/tcp/30333/p2p/12D3KooWSCufgHzV4fCwRijfH2k3abrpAJxTKxEvN1FDuRXA2U9x
            - --
            # relaychain
            - --base-path=/mangata/relaychaindata
            - --bootnodes=/dns/relaychain-alice/tcp/30333/p2p/12D3KooWEyoppNCUx8Yx66oV9fJnriXwCcXwDDUA2kj6vnc6iDEp
            - --execution=wasm
            - --chain=/etc/mangata/local.json
          ports:
            - containerPort: 9716
            - containerPort: 9944
            - containerPort: 30333
            - containerPort: 40333
          env:
            {{- range $key, $val := .Values.node.env }}
            - name: {{ $key }}
              value: {{ $val }}
            {{- end }}
          resources:
          {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /etc/mangata/
              name: node-chainspec-volume
            - mountPath: /keystore
              name: chain-keystore
            - mountPath: /mangata/data
              name: chaindata            
            - mountPath: /mangata/relaychaindata
              name: relaychaindata
      volumes:
        - name: node-chainspec-volume
          emptyDir: {}
        - name: chain-keystore
          emptyDir:
            medium: "Memory"
            sizeLimit: 10Mi
      {{- range $keys := .Values.node.node_02.keys }}
        - name: {{ .type }}
          secret:
            secretName: "node-02-{{ .type }}"
            defaultMode: 0400
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: chaindata
      spec:
        storageClassName: "standard-rwo"
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ .Values.node.storageSize }}
    - metadata:
        name: relaychaindata
      spec:
        storageClassName: "standard-rwo"
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ .Values.node.relaychainStorageSize }}
