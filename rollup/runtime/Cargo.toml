[package]
name = "rollup-runtime"
version = "1.0.0"
description = "Mangata rollup runtime"
authors = ["Mangata Team"]
edition.workspace = true
license = "MIT-0"
publish = false
repository.workspace = true

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[build-dependencies]
substrate-wasm-builder = { workspace = true }

[dependencies]
codec = { workspace = true, default-features = false, features = ["derive"] }
scale-info = { workspace = true, default-features = false, features = ["derive"] }
log = { workspace = true, default-features = false }
array-bytes = { workspace = true }
smallvec = "1.6.1"
static_assertions = "1.1.0"

# Local Dependencies
pallet-bootstrap = { path = "../../pallets/bootstrap", default-features = false, version = "0.1.0" }
pallet-fee-lock = { path = "../../pallets/fee-lock", default-features = false }
pallet-issuance = { path = "../../pallets/issuance", default-features = false }
pallet-maintenance = { path = "../../pallets/maintenance", default-features = false }
pallet-multipurpose-liquidity = { path = "../../pallets/multipurpose-liquidity", default-features = false }
pallet-metamask-signature = { path = "../../pallets/metamask-signature", default-features = false }
pallet-proof-of-stake = { path = "../../pallets/proof-of-stake", default-features = false, version = "0.1.0" }
pallet-sudo-origin = { path = "../../pallets/sudo-origin", default-features = false }
pallet-xyk = { path = "../../pallets/xyk", default-features = false, version = "0.1.0" }
parachain-staking = { path = "../../pallets/parachain-staking", default-features = false }
xyk-runtime-api = { path = "../../pallets/xyk/runtime-api", default-features = false, version = "2.0.0" }
rolldown-runtime-api = { path = "../../pallets/rolldown/runtime-api", default-features = false, version = "2.0.0" }
proof-of-stake-runtime-api = { path = '../../pallets/proof-of-stake/runtime-api', default-features = false }
pallet-rolldown = { path = "../../pallets/rolldown", default-features = false }
pallet-sequencer-staking = { path = "../../pallets/sequencer-staking", default-features = false }
metamask-signature-runtime-api = { path = '../../pallets/metamask-signature-runtime-api', default-features = false }
pallet-crowdloan-rewards = { path = '../../pallets/crowdloan-rewards', default-features = false }

# Substrate Dependencies
## Substrate Primitive Dependencies
mangata-support = { workspace = true, default-features = false }
mangata-types = { workspace = true, default-features = false }
pallet-utility-mangata = { workspace = true, default-features = false }
sp-api = { workspace = true, default-features = false }
sp-block-builder = { workspace = true, default-features = false }
sp-consensus-aura = { workspace = true, default-features = false }
sp-consensus-grandpa = { workspace = true, default-features = false }
sp-core = { workspace = true, default-features = false }
sp-inherents = { workspace = true, default-features = false }
sp-io = { workspace = true, default-features = false }
sp-offchain = { workspace = true, default-features = false }
sp-runtime = { workspace = true, default-features = false }
sp-session = { workspace = true, default-features = false }
sp-std = { workspace = true, default-features = false }
sp-storage = { workspace = true, default-features = false }
sp-transaction-pool = { workspace = true, default-features = false }
sp-ver = { workspace = true, default-features = false }
sp-version = { workspace = true, default-features = false }
sp-weights = { workspace = true, default-features = false }
sp-application-crypto = { workspace = true, default-features = false }

## Substrate FRAME Dependencies
frame-benchmarking = { workspace = true, default-features = false, optional = true }
frame-executive = { workspace = true, default-features = false }
frame-support = { workspace = true, default-features = false }
frame-system = { workspace = true, default-features = false }
frame-system-benchmarking = { workspace = true, default-features = false, optional = true }
frame-system-rpc-runtime-api = { workspace = true, default-features = false }
frame-try-runtime = { workspace = true, default-features = false, optional = true }
ver-api = { workspace = true, default-features = false }

## Substrate Pallet Dependencies
pallet-aura = { workspace = true, default-features = false }
pallet-grandpa = { workspace = true, default-features = false }
pallet-authorship = { workspace = true, default-features = false }
pallet-collective-mangata = { workspace = true, default-features = false }
pallet-identity = { workspace = true, default-features = false }
pallet-membership = { workspace = true, default-features = false }
pallet-proxy = { workspace = true, default-features = false }
pallet-session = { workspace = true, default-features = false }
pallet-sudo-mangata = { workspace = true, default-features = false }
pallet-timestamp = { workspace = true, default-features = false }
pallet-transaction-payment = { workspace = true, default-features = false }
pallet-transaction-payment-rpc-runtime-api = { workspace = true, default-features = false }
pallet-treasury = { workspace = true, default-features = false }
pallet-vesting-mangata = { workspace = true, default-features = false }

# Open-Runtime-Module-Library Dependencies
orml-asset-registry = { workspace = true, default-features = false }
orml-tokens = { workspace = true, default-features = false }
orml-traits = { workspace = true, default-features = false }

[features]
default = ["std"]
std = [
	"codec/std",
	"frame-benchmarking/std",
	"frame-executive/std",
	"frame-support/std",
	"frame-system-benchmarking/std",
	"frame-system-rpc-runtime-api/std",
	"frame-system/std",
	"frame-try-runtime/std",
	"log/std",
	"mangata-support/std",
	"mangata-types/std",
	"orml-asset-registry/std",
	"orml-tokens/std",
	"orml-traits/std",
	"pallet-aura/std",
	"pallet-authorship/std",
	"pallet-bootstrap/std",
	"pallet-collective-mangata/std",
	"pallet-crowdloan-rewards/std",
	"pallet-fee-lock/std",
	"pallet-identity/std",
	"pallet-issuance/std",
	"pallet-maintenance/std",
	"pallet-membership/std",
	"pallet-metamask-signature/std",
	"pallet-multipurpose-liquidity/std",
	"pallet-proof-of-stake/std",
	"pallet-proxy/std",
	"pallet-session/std",
	"pallet-sudo-mangata/std",
	"pallet-sudo-origin/std",
	"pallet-timestamp/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-transaction-payment/std",
	"pallet-treasury/std",
	"pallet-utility-mangata/std",
	"pallet-vesting-mangata/std",
	"pallet-xyk/std",
	"parachain-staking/std",
	"proof-of-stake-runtime-api/std",
	"metamask-signature-runtime-api/std",
	"scale-info/std",
	"sp-api/std",
	"sp-block-builder/std",
	"sp-consensus-aura/std",
	"sp-core/std",
	"sp-inherents/std",
	"sp-io/std",
	"sp-offchain/std",
	"sp-runtime/std",
	"sp-session/std",
	"sp-std/std",
	"sp-storage/std",
	"sp-transaction-pool/std",
	"sp-ver/std",
	"sp-version/std",
	"sp-weights/std",
	"ver-api/std",
	"xyk-runtime-api/std",
	"sp-consensus-grandpa/std",
	"pallet-grandpa/std",
	"sp-application-crypto/std",
	"rolldown-runtime-api/std",
	"pallet-rolldown/std",
	"pallet-sequencer-staking/std",
]

try-runtime = [
	"frame-executive/try-runtime",
	"frame-support/try-runtime",
	"frame-system/try-runtime",
	"frame-try-runtime",
	"orml-asset-registry/try-runtime",
	"orml-tokens/try-runtime",
	"pallet-aura/try-runtime",
	"pallet-authorship/try-runtime",
	"pallet-bootstrap/try-runtime",
	"pallet-collective-mangata/try-runtime",
	"pallet-crowdloan-rewards/try-runtime",
	"pallet-fee-lock/try-runtime",
	"pallet-identity/try-runtime",
	"pallet-issuance/try-runtime",
	"pallet-maintenance/try-runtime",
	"pallet-membership/try-runtime",
	"pallet-multipurpose-liquidity/try-runtime",
	"pallet-proof-of-stake/try-runtime",
	"pallet-proxy/try-runtime",
	"pallet-session/try-runtime",
	"pallet-sudo-mangata/try-runtime",
	"pallet-sudo-origin/try-runtime",
	"pallet-timestamp/try-runtime",
	"pallet-transaction-payment/try-runtime",
	"pallet-treasury/try-runtime",
	"pallet-utility-mangata/try-runtime",
	"pallet-vesting-mangata/try-runtime",
	"pallet-xyk/try-runtime",
	"parachain-staking/try-runtime",
	"sp-runtime/try-runtime",
	"pallet-grandpa/try-runtime",
	"pallet-rolldown/try-runtime",
	"pallet-sequencer-staking/try-runtime",
]

fast-runtime = []

runtime-benchmarks = [
	"frame-benchmarking/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system-benchmarking",
	"frame-system-benchmarking/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"mangata-support/runtime-benchmarks",
	"orml-asset-registry/runtime-benchmarks",
	"orml-tokens/runtime-benchmarks",
	"pallet-bootstrap/runtime-benchmarks",
	"pallet-collective-mangata/runtime-benchmarks",
	"pallet-crowdloan-rewards/runtime-benchmarks",
	"pallet-fee-lock/runtime-benchmarks",
	"pallet-identity/runtime-benchmarks",
	"pallet-issuance/runtime-benchmarks",
	"pallet-maintenance/runtime-benchmarks",
	"pallet-membership/runtime-benchmarks",
	"pallet-multipurpose-liquidity/runtime-benchmarks",
	"pallet-proof-of-stake/runtime-benchmarks",
	"pallet-proxy/runtime-benchmarks",
	"pallet-sudo-mangata/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"pallet-treasury/runtime-benchmarks",
	"pallet-utility-mangata/runtime-benchmarks",
	"pallet-vesting-mangata/runtime-benchmarks",
	"pallet-xyk/runtime-benchmarks",
	"parachain-staking/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"pallet-grandpa/runtime-benchmarks",
	"pallet-rolldown/runtime-benchmarks",
	"pallet-sequencer-staking/runtime-benchmarks",
	"pallet-session/runtime-benchmarks",
]
